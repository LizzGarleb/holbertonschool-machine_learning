#!/usr/bin/env python3

import numpy as np

Deep = __import__('21-deep_neural_network').DeepNeuralNetwork

lib_train = np.load('data/Binary_Train.npz')
X_3D, Y = lib_train['X'], lib_train['Y']
X = X_3D.reshape((X_3D.shape[0], -1)).T

np.random.seed(0)
deep = Deep(X.shape[0], [5, 3, 1])
A, cache = deep.forward_prop(X)
deep.gradient_descent(Y, cache, 0.5)
print(deep.weights)

# Expected Output:
# {'b3': array([[0.00659936]]), 'b2': array([[-0.00055419],
#        [ 0.00032369],
#        [ 0.0007201 ]]), 'W2': array([[ 0.4586347 ,  0.55968571, -1.22435332, -0.09516874,  0.57668454],
#        [-0.16209305,  0.06902405, -0.9460547 , -0.30329296,  1.15722071],
#        [-0.49595566, -0.91068385,  0.09382566,  0.49948968,  0.75647764]]), 'b1': array([[-1.01835520e-03],
#        [-1.22929756e-04],
#        [ 9.25521878e-05],
#        [ 1.07730873e-04],
#        [ 2.29014796e-04]]), 'W3': array([[-0.41262664,  0.18889024,  0.44717929]]), 'W1': array([[ 0.0890981 ,  0.02021099,  0.04943373, ...,  0.02632982,
#          0.03090699, -0.06775582],
#        [ 0.02408701,  0.00749784,  0.02672082, ...,  0.00484894,
#         -0.00227857,  0.00399625],
#        [ 0.04295829, -0.04238217, -0.05110231, ..., -0.00364861,
#          0.01571416, -0.05446546],
#        [ 0.05361891, -0.05984585, -0.09117898, ..., -0.03094292,
#         -0.01925805, -0.06308145],
#        [-0.01667953, -0.04216413,  0.06239623, ..., -0.02024521,
#         -0.05159656, -0.02373981]])}